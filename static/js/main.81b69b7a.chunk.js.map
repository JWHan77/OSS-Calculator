{"version":3,"sources":["components/Panel.jsx","components/Display.jsx","components/ButtonGroup.jsx","components/Button.jsx","components/Calculator.jsx","index.js"],"names":["Container","styled","div","_templateObject","Panel","react","this","props","children","React","Display_templateObject","Display","Display_Container","data-display","displayValue","ButtonGroup_templateObject","ButtonGroup","handleClick","e","_this","onClickButton","target","innerText","ButtonGroup_Container","onClick","Button_templateObject","p","size","Button","_this$props","_this$props$size","color","Button_Container","data-color","Calculator_templateObject","evalFunc","string","console","log","Function","Calculator","state","key","_this$state$displayVa","lastChar","substr","length","operatorKeys","proc","AC","setState","BS","÷","includes","×","-","+","=",".","0","Number","Calculator_Container","components_Panel","components_Display","components_ButtonGroup","components_Button","ReactDOM","render","react_default","a","createElement","components_Calculator","document","getElementById"],"mappings":"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","file":"static/js/main.81b69b7a.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  margin: 10px auto;\r\n  width: 300px;\r\n  padding: 10px;\r\n  border: 2px solid #000;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nclass Panel extends React.Component {\r\n  render() {\r\n    return <Container>{this.props.children}</Container>;\r\n  }\r\n}\r\n\r\nexport default Panel;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  padding: 5px;\r\n  [data-display] {\r\n    border-radius: 5px;\r\n    border: 2px solid #000;\r\n    height: 60px;\r\n    line-height: 60px;\r\n    box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.2);\r\n    text-align: left;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    padding: 0 15px;\r\n    color: #000;\r\n  }\r\n`;\r\n\r\nclass Display extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div data-display>{this.props.displayValue}</div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Display;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :after {\r\n    content: \"\";\r\n    display: block;\r\n    clear: both;\r\n  }\r\n`;\r\n\r\nclass ButtonGroup extends React.Component {\r\n  handleClick = e => {\r\n    this.props.onClickButton(e.target.innerText);\r\n  };\r\n  render() {\r\n    return (\r\n      <Container onClick={this.handleClick}>{this.props.children}</Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ButtonGroup;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  float: left;\r\n  width: ${p => (p.size / 4) * 100}%;\r\n  padding: 5px;\r\n  button {\r\n    :focus {\r\n      outline: none;\r\n    }\r\n    :hover {\r\n      background: #eee;\r\n    }\r\n    :active {\r\n      box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.4);\r\n    }\r\n    color: #000;\r\n    font-size: 20px;\r\n    line-height: 40px;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    width: 100%;\r\n    background: transparent;\r\n    border-radius: 5px;\r\n    border: 2px solid #000;\r\n    box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.4);\r\n\r\n    &[data-color=\"gray\"] {\r\n      background: #eee;\r\n      :hover {\r\n        background: #ccc;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass Button extends React.Component {\r\n  render() {\r\n    const { size = 1, color, children } = this.props;\r\n    return (\r\n      <Container size={size}>\r\n        <button data-color={color}>{children}</button>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Panel from \"./Panel\";\r\nimport Display from \"./Display\";\r\nimport ButtonGroup from \"./ButtonGroup\";\r\nimport Button from \"./Button\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst evalFunc = function(string) {\r\n  // eslint-disable-next-line no-new-func\r\n  console.log(string);\r\n  return new Function(\"return (\" + string + \")\")();\r\n};\r\n\r\nclass Calculator extends React.Component {\r\n  state = {\r\n    displayValue: \"\"\r\n  };\r\n\r\n  onClickButton = key => {\r\n    let { displayValue = \"\" } = this.state;\r\n    displayValue = \"\" + displayValue;\r\n    const lastChar = displayValue.substr(displayValue.length - 1);\r\n    const operatorKeys = [\"/\", \"*\", \"-\", \"+\"];\r\n    const proc = {\r\n      AC: () => {\r\n        this.setState({ displayValue: \"\" });\r\n      },\r\n      BS: () => {\r\n        if (displayValue.length > 0) {\r\n          displayValue = displayValue.substr(0, displayValue.length - 1);\r\n        }\r\n        this.setState({ displayValue });\r\n      },\r\n      \"÷\": () => {\r\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\r\n          console.log(displayValue);\r\n          console.log(lastChar);\r\n          this.setState({ displayValue: displayValue + \"/\" });\r\n        }\r\n      },\r\n      \"×\": () => {\r\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\r\n          this.setState({ displayValue: displayValue + \"*\" });\r\n        }\r\n      },\r\n      \"-\": () => {\r\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\r\n          this.setState({ displayValue: displayValue + \"-\" });\r\n        }\r\n      },\r\n      \"+\": () => {\r\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\r\n          this.setState({ displayValue: displayValue + \"+\" });\r\n        }\r\n      },\r\n      \"=\": () => {\r\n        if (lastChar !== \"\" && operatorKeys.includes(lastChar)) {\r\n          displayValue = displayValue.substr(0, displayValue.length - 1);\r\n        } else if (lastChar !== \"\") {\r\n          displayValue = evalFunc(displayValue);\r\n        }\r\n        this.setState({ displayValue });\r\n      },\r\n      \".\": () => {\r\n        if (lastChar !== \"\") {\r\n          this.setState({ displayValue: displayValue + \".\" });\r\n        }\r\n      },\r\n      \"0\": () => {\r\n        if (Number(displayValue) !== 0) {\r\n          displayValue += \"0\";\r\n          this.setState({ displayValue });\r\n        }\r\n      }\r\n    };\r\n\r\n    if (proc[key]) {\r\n      proc[key]();\r\n    } else {\r\n      // 여긴 숫자\r\n      this.setState({ displayValue: displayValue + key });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Panel>\r\n          <Display displayValue={this.state.displayValue} />\r\n          <ButtonGroup onClickButton={this.onClickButton}>\r\n            <Button size={2} color=\"gray\">\r\n              AC\r\n            </Button>\r\n            <Button size={1} color=\"gray\">\r\n              BS\r\n            </Button>\r\n            <Button size={1} color=\"gray\">\r\n              ÷\r\n            </Button>\r\n\r\n            <Button size={1}>7</Button>\r\n            <Button size={1}>8</Button>\r\n            <Button size={1}>9</Button>\r\n            <Button size={1} color=\"gray\">\r\n              ×\r\n            </Button>\r\n\r\n            <Button size={1}>4</Button>\r\n            <Button size={1}>5</Button>\r\n            <Button size={1}>6</Button>\r\n            <Button size={1} color=\"gray\">\r\n              -\r\n            </Button>\r\n\r\n            <Button size={1}>1</Button>\r\n            <Button size={1}>2</Button>\r\n            <Button size={1}>3</Button>\r\n            <Button size={1} color=\"gray\">\r\n              +\r\n            </Button>\r\n\r\n            <Button size={2}>0</Button>\r\n            <Button size={1}>.</Button>\r\n            <Button size={1} color=\"gray\">\r\n              =\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Panel>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nimport Calculator from \"./components/Calculator\";\r\n\r\nReactDOM.render(<Calculator />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}